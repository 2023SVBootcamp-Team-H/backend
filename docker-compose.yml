version: '3.7'
services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      # Linux
      # - './backend/data/grafana/env.grafana'
      
      # Windows
      - './data/grafana/env.grafana'
    volumes:
      # Linux
      # - './backend/data/grafana:/var/lib/grafana'
       
      # Windows
      - './data/grafana:/var/lib/grafana'
    depends_on:
      - prometheus
    #user: root  
    restart: always
    networks:
      - promnet
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      # Linux
      # - './backend/data/nginx/conf.d:/etc/nginx/conf.d'
      # - './backend/data/nginx/nginx.conf:/etc/nginx/nginx.conf'
      # - './backend/data/nginx/html:/usr/share/nginx/html'
      # - './backend/data/nginx/logs:/var/log/nginx'
      
      # Windows
      - './data/nginx/conf.d:/etc/nginx/conf.d'
      - './data/nginx/nginx.conf:/etc/nginx/nginx.conf'
      - './data/nginx/html:/usr/share/nginx/html'
      - './data/nginx/logs:/var/log/nginx'
    restart: always
    networks:
      - promnet
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    env_file:
      # Linux
      # - './backend/data/mysql/env.mysql'
      
      # Windows
      - './data/mysql/env.mysql'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - './backend/data/mysql/data:/var/lib/mysql'
      - './backend/data/mysql/etc:/etc/mysql/conf.d'
    restart: always
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - promnet
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./backend/data/prometheus/config:/etc/prometheus
      - ./backend/data/prometheus/volume:/prometheus
    ports:
      - 9090:9090
    command: # web.enalbe-lifecycle은 api 재시작없이 설정파일들을 reload 할 수 있게 해줌
      - '--web.enable-lifecycle'
      - '--storage.tsdb.path=/prometheus'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    #user: root
    restart: always
    networks:
      - promnet
  api:
   build:
     context: /backend/data/django
     dockerfile: Dockerfile
   container_name: api
   working_dir: /app
   command: django manage.py runserver 0.0.0.0:5000
   ports:
     - "5000:5000"
   volumes:
     - /data/django:/app
   restart: always

networks:
  promnet:
    driver: bridge